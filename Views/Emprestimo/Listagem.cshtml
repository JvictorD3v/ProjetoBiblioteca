@model List<Emprestimo>
@{
    ViewData["Title"] = "Listagem de Empréstimos";
    string Classe = "";

    int FiltroPorPag = Int32.Parse(ViewData["EmprestimosPorPagina"].ToString());
    int PaginaAtual = Int32.Parse(ViewData["PaginaAtual"].ToString());
    int NumEmprestimoPorPag = (Model.Count < FiltroPorPag ? Model.Count : FiltroPorPag);
    int NumTotalDePag = (Model.Count / NumEmprestimoPorPag) + (Model.Count % NumEmprestimoPorPag == 0 ? 0 : 1);
}

<div class="row">
    <div class="col-md-12">
        <form class="form-inline" method="POST">
            <div class="form-group mb-2">
                <select name="TipoFiltro" class="form-control">
                    <option value="Usuario">Usuário</option>
                    <option value="Livro">Livro</option>
                </select>
            </div>
            <div class="form-group mb-2 mx-sm-3">
                <input type="text" placeholder="Filtro" name="Filtro" class="form-control" />
            </div>

            <div>
                <select name="itensPorPagina" id="itensPorPagina">
                    <option value="10">10 Emprestimos</option>
                    <option value="15">15 Emprestimos</option>
                    <option value="30">30 Emprestimos</option>
                    <option value="50">50 Emprestimos</option>
                    <option value="@Model.Count">Exibir Tudo</option>
                </select>
            </div>


            <button type="submit" class="btn btn-primary mb-2">Pesquisar</button>

            <div id="SeletorPaginas">
                <span>Página:</span>
                @for (int i = 1; i <= NumTotalDePag; i++)
                {
                    <span><a href="/Emprestimo/Listagem?PaginaAtual=@i">@i, </a></span>
                    /////////////////
                }
            </div>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @if (Model.Count > 0)
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Usuario</th>
                        <th>Data Empréstimo</th>
                        <th>Data Devolução</th>
                        <th>Livro</th>
                        <th>Autor</th>
                        <th></th>
                    </tr>                
                </thead>
                <tbody>

                    <!-- (a)foreach(Emprestimo e in Model)
                        {-->
                    <!--
                            if((System.DateTime.Compare(System.DataTime.Now, e.DataDevolucao)>0) )
                                {
                                    Classe = "text-danger"; //fica vermelho se passou a data e não devolveu
                                    if(e.Devolvido == true){
                                        Classe = "text-primary"; //texto azul se devolvido for checado e se a data passou para continuar azul
                                    }
                                }else{}


                        @for (int i = (PaginaAtual - 1) * NumEmprestimoPorPag; i < (NumEmprestimoPorPag * PaginaAtual < Model.Count ? NumEmprestimoPorPag * PaginaAtual : Model.Count); i++)
                        {
                            <!--foreach (Emprestimo e in Model)

                            if((System.DateTime.Compare(System.DataTime.Now, Model[i].DataDevolucao) > 0))
                            {
                                Classe = "text-danger"; //fica vermelho se passou a data e não devolveu
                                    if(e.Devolvido == true){
                                        Classe = "text-primary"; //texto azul se devolvido for checado e se a data passou para continuar azul
                                    }
                                }else{Classe = "";}
                            }
                        }
                        }
                </tbody>
            </table>
        }

    </div>
</div>

